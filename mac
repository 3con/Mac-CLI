#!/bin/sh
# mac - automation command line tools for OS X

function=$1

if [ "$function" == "restart" ]; then
	echo "Restarting Mac in 3 seconds..."
	sleep 3s
	sudo shutdown -r now

elif [ "$function" == "apps" ]; then
	echo "Getting list of installed apps from the App Store...\n"
	find /Applications -path '*Contents/_MASReceipt/receipt' -maxdepth 4 -print |\sed 's#.app/Contents/_MASReceipt/receipt#.app#g; s#/Applications/##'
elif [ "$function" == "speedtest" ]; then
	echo "Testing internet connection speed..."
	node "/usr/local/bin/scripts/speed-test/node_modules/cli.js"

elif [ "$function" == "php:syntax" ]; then
	echo "Checking PHP syntax for all files in current location...\n"
	find . -name \*.php -exec php -l "{}" \;

elif [ "$function" == "firefox" ]; then
	open -a Firefox
elif [ "$function" == "chrome" ]; then
	open -a Google\ Chrome
elif [ "$function" == "safari" ]; then
	open -a Safari
elif [ "$function" == "phpstorm" ]; then
	open -a PHPStorm
elif [ "$function" == "xcode" ]; then
	open -a XCode
elif [ "$function" == "mamp" ]; then
	open -a MAMP
elif [ "$function" == "filezilla" ]; then
	open -a Filezilla
elif [ "$function" == "skype" ]; then
	open -a Skype
elif [ "$function" == "gotomeeting" ]; then
	open -a GoToMeeting
elif [ "$function" == "snippetslab" ]; then
	open -a SnippetsLab
elif [ "$function" == "preview" ]; then
	open -a Preview
elif [ "$function" == "photoshop" ]; then
	open -a Adobe\ Photoshop\ CC\ 2015
elif [ "$function" == "textedit" ]; then
	open -a TextEdit
elif [ "$function" == "sourcetree" ]; then
	open -a SourceTree
elif [ "$function" == "stree" ]; then
	open -a SourceTree ./
elif [ "$function" == "quiver" ]; then
	open -a Quiver
elif [ "$function" == "virtualbox" ]; then
	open -a VirtualBox
elif [ "$function" == "pixelmator" ]; then
	open -a Pixelmator

elif [ "$function" == "mysql" ]; then
	open -a MySQL
elif [ "$function" == "mysql-cli" ]; then
	/Applications/MAMP/Library/bin/mysql --host=localhost -uroot -proot

elif [ "$function" == "mindnode" ]; then
	open -a MindNode
elif [ "$function" == "paw" ]; then
	open -a Paw
elif [ "$function" == "appstore" ]; then
	open -a App\ Store
elif [ "$function" == "goodtask" ]; then
	open -a GoodTask

# Start screensaver
elif [ "$function" == "screensaver" ]; then
	open -a /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app

# Edit hosts file
elif [ "$function" == "hosts" ]; then
	sudo vi /private/etc/hosts

# Eject all mounted volumes and disk
elif [ "$function" == "eject-all" ]; then
	osascript -e 'tell application "Finder" to eject (every disk whose ejectable is true)'

# See memory usage ordered by memory consumption
elif [ "$function" == "memory" ]; then
	top -o MEM


	# TODO: Working on airplane mode (disable wi-fi and bluetooth)

elif [ "$function" == "airplane-mode:on" ]; then
	echo "Enabling airplane mode...\n"
	 # networksetup -setairportpower airport off
	 # networksetup -setairportpower en0 off
	 # networksetup -setairportpower en1 off
	 # launchctl unload -w /System/Library/LaunchDaemons/com.apple.blued.plist # Switch bluetooth off
elif [ "$function" == "airplane-mode:off" ]; then
	echo "Disabling airplane mode...\n"
	 # networksetup -setairportpower airport on
	 # networksetup -setairportpower en0 on
	 # networksetup -setairportpower en1 on
	 # launchctl load -wF /System/Library/LaunchDaemons/com.apple.blued.plist # Switch bluetooth on

	# TODO: Empty trash






else
	echo "Command not found"
fi
